PROGARM:
Kadanes

CODE:
def kadanes(arr):
    _sum = float("-inf")
    cs = arr[0]
    n = len(arr)
    for i in range(1,n):
        if cs < 0:
            cs = 0
        if arr[i] < 0:
            _sum = max(_sum,cs+arr[i])
        cs = cs+arr[i]
    return max(_sum,cs)

print(kadanes([-1,-2,3,-4,-6,18,65,110]))
__________________________________________________________________________________________________________________________________________________________________________________________________________________
PROGRAM:
Merge sorted array

CODE:
def main():
    arr1 = [-2,4,13,45,65,76,98,109]
    arr2 = [-30,-1,23,54,67,87,99,199,301]
    ans=[]
    i,j = 0,0
    while i<len(arr1) or j<len(arr2):
        if i>=len(arr1):
            while j<len(arr2):
                ans.append(arr2[j])
                j+=1
        elif j>=len(arr2):
            while i<len(arr1):
                ans.append(arr1[i])
                i+=1
        elif arr1[i]<arr2[j]:
            ans.append(arr1[i])
            i+=1
        else:
            ans.append(arr2[j])
            j+=1
    print(ans)

main()
________________________________________________________________________________________________________________________________________________________________________________________________
PROGRAM:
Missing number

CODE:
def brute_force(n,arr):
    for i in range(1,n+1):
        if i not in arr:
            return i
def xor_approach(n,arr):
    ans = 0
    for i in range(1,n+1):
        ans = ans^i
        if i!=n:
            ans = ans^arr[i-1]
    return ans
print(xor_approach(10,[3,4,1,2,6,5,8,10,9]))
__________________________________________________________________________________________________________________________________________________________________________________________________
PROGARM:
Query subarray sum

CODE:
def query_subarray_sum(arr,queries):
    n = len(arr)
    ps = [0 for i in range(n)]
    for i in range(n):
        if i == 0:
            ps[i] = arr[i]
        else:
            ps[i] = ps[i-1]+arr[i]
    for query in queries:
        i = query[0]
        j = query[1]
        if i ==0:
            print(ps[j],end=" ")
        else:
            print(ps[j]-ps[i-1],end=" ")
 # arr -> [-1,2,32,4,5,5,4,3,2]
    ''' queires=[
        [0,4],
        [2,5],
        [3,6]
    ]
    '''
query_subarray_sum([2,4,5,1,6,3,7,8],[ [0,4],[1,3],[4,6]])
_______________________________________________________________________________________________________________________________________________________________________________________________________________
